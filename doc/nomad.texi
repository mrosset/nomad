\input texinfo
@c -*- texinfo -*-

@c %**start of header
@setfilename nomad.info
@documentencoding UTF-8
@settitle Nomad Reference Manual
@documentlanguage en
@c %**end of header

@include version.texi

@copying
Copyright @copyright{} 2019 Amar M. Singh@*

@quotation
Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.3 or
any later version published by the Free Software Foundation; with no
Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts.  A
copy of the license is included in the section entitled ``GNU Free
Documentation License.''
@end quotation
@end copying

@dircategory Nomad
@direntry
* Nomad: (nomad).       Extensible self-documenting web browser.
@end direntry

@titlepage
@title Nomad Reference Manual
@subtitle A User's Guide for Nomad Web Browser
@author The Nomad Developers

@page
@vskip 0pt plus 1filll
Edition @value{MANUAL-VERSION} @*
@value{MANUAL-UPDATED-MONTH} @*

@insertcopying
@end titlepage

@contents

@c *********************************************************************

@node Top
@top Introduction

This document describes @code{Nomad}, a modern Web Browser that is
programmable in Guile, an implementation of the Scheme programming
language.

Nomad is an extensible, customisable, self-documenting web browser. This
manual describes how to use Nomad and some of the ways to customise it;
it corresponds to the Nomad version @value{NOMAD-VERSION}.

It supports various Emacs concepts such as buffers, mode-maps, commands,
and the minibufffer.  This is Edition @value{MANUAL-VERSION} of
@cite{The Nomad Reference Manual} for the Nomad Web Browser.@refill

You can read this manual in Nomad by pressing 'C-x i'.

For information on the extension language for Nomad, see @ref{Top, Guile
Reference Manual,, guile, The Guile Reference Manual}.

@menu
* Distribution::
* Installation::
* Run Nomad::
* Extend Nomad::
* Build from source::

@detailmenu
--- The Detailed Node Listing ---

Distribution

Installation

* With Guix::

Run Nomad

* From the command line::
* Keybinds::

Build from source

* Run Nomad before you've installed Nomad::

@end detailmenu
@end menu

@c *********************************************************************
@node Distribution
@chapter Distribution

Get the latest source code from https://git.savannah.nongnu.org/cgit/nomad.git

@c *********************************************************************
@node Installation
@chapter Installation

@menu
* With Guix::
@end menu

@c *********************************************************************
@node With Guix
@section With Guix

Nomad is not yet available in the official Guix

Clone the Nomad source repository
@example
git clone https://git.savannah.gnu.org/git/nomad.git
cd nomad
@end example

Build and install Nomad
@example
guix package -f ./guix.scm
@end example

@c *********************************************************************
@node Run Nomad
@chapter Run Nomad

@menu
* From the command line::
* Keybinds::
@end menu

@c *********************************************************************
@node From the command line
@section From the command line

Nomad doesn't yet support the full set of command line options. However,
It can be run from a shell by typing

@example
nomad
@end example

@c *********************************************************************
@node Keybinds
@section Keybinds

Nomad intends to support Emacs-like keybinds because it's design was
inspired from Emacs. However there is no limitation on what Keybindings
Nomad can support. Nomad has the concept of key-maps just like Emacs and
users should be able to define their own keymaps.

At the top level you might want to use `M-x` (Meta/Alt X) to use the
execute command menu.

In a Webview buffer the `webview-mode-map` is active which contains the
following keybinds.

@multitable {aaaaaaaaaa} {aaaaaaaaaaaaa}
@headitem Key stroke
@tab Command
@item "C-b"
@tab (next-buffer)
@item "C-u"
@tab (back)
@item "C-m"
@tab (forward)
@item "C-n"
@tab (scroll-down)
@item "C-f"
@tab (hints)
@item "C-p"
@tab (scroll-up)
@item "C-r"
@tab (reload)
@end multitable

In Nomad's Ibuffer menu the `ctrl-x-map` is active which has these
keybindings.

@multitable {aaaaaaaaaa} {aaaaaaaaaaaaa}
@headitem Key stroke
@tab Command
@item "b"
@tab (next-buffer)
@item "k"
@tab (kill-buffer)
@end multitable

@c *********************************************************************
@node Extend Nomad
@chapter Extend Nomad

You can customize nomad by writing your configurations to `~/.nomad`,
which is just a scheme file!

Examples
@example
(set! search-provider-format "https://google.ca/search?q=~a")
@end example

@c *********************************************************************
@node Build from source
@chapter Build from source

In Ubuntu 19.04, the the following snippet will install most
dependencies.
@example
sudo apt install -y \
guile-2.2 \
guile-2.2-dev \
guile-library \
libgtk-3-dev \
libwebkit2gtk-4.0-dev \
libgtksourceview-4-dev
@end example

Using Guix, the following snippet will install all required dependencies
in a temporary shell.
@example
guix environment -l ./guix.scm
@end example

Then build the package with
@example
autoreconf -vif
./configure
make
@end example

@menu
* Run Nomad before you've installed Nomad::
@end menu

@c *********************************************************************
@node Run Nomad before you've installed Nomad
@section Run Nomad before you've installed Nomad

Once you've built Nomad without errors, to run Nomad from the local
build.
@example
make test
@end example

@bye

;; init.test -*- scheme -*-
;; Copyright (C) 2017-2018 Michael Rosset <mike.rosset@gmail.com>

;; This file is part of Nomad

;; Nomad is free software: you can redistribute it and/or modify it
;; under the terms of the GNU General Public License as published by the
;; Free Software Foundation, either version 3 of the License, or
;; (at your option) any later version.

;; Nomad is distributed in the hope that it will be useful, but
;; WITHOUT ANY WARRANTY; without even the implied warranty of
;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
;; See the GNU General Public License for more details.

;; You should have received a copy of the GNU General Public License along
;; with this program.  If not, see <http://www.gnu.org/licenses/>.

(define-module (test-util)
  #:use-module (nomad init)
  #:use-module (test-suite lib))

(define home (getenv "HOME"))
(define home-dir (string-append home file-name-separator-string))
(define test-data "testdata/")
(define nomad.d "testdata/nomad.d")

(with-test-prefix "testdata directory"
                  (when (not (file-exists? test-data))
                    (mkdir test-data #o755))
                  (pass-if-equal "testdata exists" #t (file-is-directory? test-data)))

(with-test-prefix "dynamic fluids"
                  (with-fluid* user-nomad-directory nomad.d
                               (lambda ()
                                 (pass-if-equal "user-nomad-directory" "testdata/nomad.d"
                                                (fluid-ref user-nomad-directory)))))

(with-test-prefix "init module"
                    (pass-if-equal "user-init-file expands to $HOME/.nomad"
                                   user-init-file (string-append home-dir ".nomad"))
                    (pass-if-equal "user-nomad-directory expands to $HOME/nomad.d"
                                   (fluid-ref user-nomad-directory) (string-append home-dir ".nomad.d")))

(with-test-prefix "functions"
                  (with-fluid* user-nomad-directory nomad.d
                               (lambda ()
                                 (create-nomad-directory)
                                 (pass-if-equal "user dir exists"
                                                (file-is-directory? (fluid-ref user-nomad-directory)) #t)
                                 (rmdir (fluid-ref user-nomad-directory)))))
